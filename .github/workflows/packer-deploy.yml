name: Packer deploy ci

on:
  pull_request:
    branches: [asg-04-test]

jobs:
  packer-image-deploy:
    
    runs-on: ubuntu-latest

    # consume secrets
    env:
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
      MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      TEST_MYSQL_DATABASE: ${{ secrets.TEST_MYSQL_DATABASE }}
      MYSQL_DATABASE: 'csye6225'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PACKER_ACCESS_KEY_ID }}
      AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_PACKER_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-east-1'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -e "CREATE DATABASE IF NOT EXISTS $MYSQL_DATABASE;" -u$MYSQL_USER -p$MYSQL_PASSWORD

    - name: Build application artifact
      run: |
        zip -r app.zip app.py requirements.txt 

    - name: Set up Packer
      uses: hashicorp/setup-packer@main
    
    - name: Create Packer variables file
      run: |
        echo 'artifact_path = "app.zip"' > variables.pkrvars.hcl

    - name: Build custom image
      run: |
        packer init .
        packer build -var "artifact_path=app.zip" webapp.pkr.hcl

    - name: Clean up
      run: rm app.zip